import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm
from scipy.signal import find_peaks
import numpy.polynomial.polynomial as poly

mus = [2,6]
sigmas = [0.4,0.7]
x = np.linspace(0,10,1000)

data = np.zeros(shape=x.shape)
for m,s in zip(mus,sigmas):
    data += norm.pdf(x, m, s)
    
noise = np.random.random(data.shape) * 0.1
datax = data + noise

peaks,_ = find_peaks(datax, height=0, prominence=0.2, width=1)
plt.scatter(x[peaks],datax[peaks], c="red")
plt.plot(x,datax);

coefs = poly.polyfit(x, datax, 20)
ffit = poly.polyval(x, coefs)
plt.plot(x, ffit)

plt.show()
